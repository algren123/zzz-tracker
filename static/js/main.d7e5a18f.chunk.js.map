{"version":3,"sources":["firebase/base.js","components/auth/auth.js","services/useDarkMode.js","components/navbar/navbar.js","components/splash-screen/splash-screen.js","components/signup-page/signup.js","components/login-page/login.js","components/homepage/homepage.js","components/dashboard/dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","useEffect","auth","onAuthStateChanged","Provider","value","useDarkMode","localStorage","theme","setTheme","colorTheme","root","window","document","documentElement","classList","remove","add","setItem","Navbar","showing","setShowing","useContext","getElementById","className","onClick","id","type","xmlns","fill","viewBox","stroke","aria-hidden","strokeLinecap","strokeLinejoin","strokeWidth","d","to","aria-current","fillRule","clipRule","signOut","location","replace","href","SplashScreen","jumbotronItem","useRef","TweenMax","opacity","y","ease","Power3","easeOut","ref","el","withRouter","history","handleSignUp","useCallback","event","a","preventDefault","target","elements","email","password","createUserWithEmailAndPassword","push","alert","onSubmit","name","placeholder","handleLogin","signInWithEmailAndPassword","Homepage","currentUserId","uid","displayModal","setDisplayModal","sleepDate","setSleepDate","asleepTime","setAsleepTime","wakeupTime","setWakeupTime","sleepArray","setSleepArray","firestore","collection","getTimeDiff","entry","asleepHour","parseInt","Date","getTime","totalSleepDecimal","duration","moment","result","_data","hours","minutes","doc","update","totalSlept","catch","err","console","error","where","orderBy","onSnapshot","querySnapshot","items","forEach","data","length","htmlFor","TextField","defaultValue","toISOString","slice","onChange","required","date","asleep","wakeup","resetEntry","owner","ownerEmail","newSleepEntry","uuidv4","createdAt","toLocaleDateString","set","addSleepEntry","map","sleepEntry","delete","Dashboard","averageSleepTime","setAverageSleep","less6Hours","setLess6Hours","more8Hours","setMore8Hours","getSleepStats","averageSleep","i","hoursMinutesTotalSlept","split","Math","round","height","width","xType","yDomain","x","style","App","getItem","basename","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d7e5a18f.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCvj754p1_t2AV6rBgaF7NxHb9fnCHoEH0\",\r\n  authDomain: \"zzz-tracker.firebaseapp.com\",\r\n  projectId: \"zzz-tracker\",\r\n  storageBucket: \"zzz-tracker.appspot.com\",\r\n  messagingSenderId: \"1006356862639\",\r\n  appId: \"1:1006356862639:web:a142a5924de3a66d7ee65a\",\r\n  measurementId: \"G-DR5F3YJ2X9\"\r\n};\r\n\r\nconst app = firebase.initializeApp(firebaseConfig);\r\n\r\nexport default app;","import React, { useEffect, useState } from 'react';\r\nimport app from \"../../firebase/base\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        app.auth().onAuthStateChanged(setCurrentUser);\r\n    }, []);\r\n\r\n    return (\r\n        <AuthContext.Provider \r\n            value={{currentUser}}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};","import { useEffect, useState } from 'react';\r\n\r\nexport default function useDarkMode() {\r\n    const [theme, setTheme] = useState(localStorage.theme);\r\n    const colorTheme = theme === \"dark\" ? \"light\" : \"dark\";\r\n\r\n    useEffect(() => {\r\n        const root = window.document.documentElement;\r\n\r\n        root.classList.remove(colorTheme);\r\n        root.classList.add(theme);\r\n\r\n        localStorage.setItem('theme', theme);\r\n    }, [theme, colorTheme]);\r\n\r\n    return [colorTheme, setTheme];\r\n}","import React, { useContext, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../auth/auth';\r\nimport app from '../../firebase/base.js';\r\nimport './navbar.scss';\r\nimport useDarkMode from '../../services/useDarkMode';\r\n\r\nfunction Navbar() {\r\n\r\n  const [showing, setShowing] = useState(false);\r\n  const [colorTheme, setTheme] = useDarkMode();\r\n\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n\r\n    if (currentUser) {\r\n      document.getElementById('login').classList.add('hidden');\r\n      document.getElementById('signup').classList.add('hidden');\r\n\r\n      document.getElementById('newEntry').classList.remove('hidden');\r\n      document.getElementById('logout').classList.remove('hidden');\r\n    }\r\n  }, [currentUser])\r\n\r\n    return(\r\n        <nav className=\"bg-gray-400 bg-opacity-60 dark:bg-opacity-80 dark:bg-gray-800 transition-all duration-500\">\r\n  <div className=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\r\n    <div className=\"relative flex items-center justify-between h-16\">\r\n      <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\r\n        <button onClick={() => setShowing(!showing)} id=\"hamburgerMenu\" type=\"button\" className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-600 dark:text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\">\r\n          <span className=\"sr-only\">Open main menu</span>\r\n\r\n          <svg className=\"block h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6h16M4 12h16M4 18h16\" />\r\n          </svg>\r\n\r\n          <svg className=\"hidden h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n      <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\r\n        <div className=\"hidden sm:block sm:ml-6\">\r\n          <div className=\"flex space-x-4\">\r\n            \r\n            <Link to={currentUser ? '/dashboard' : '/'} className=\"bg-gray-500 dark:bg-gray-900 text-white px-3 py-2 rounded-md text-sm font-medium transition-all duration-500\" aria-current=\"page\">{currentUser ? \"Dashboard\" : \"Home\"}</Link>\r\n\r\n            <Link to={currentUser ? '/home' : '/'} className=\"text-gray-500 dark:text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium transition-all duration-500\">About</Link>\r\n\r\n            <Link to={currentUser ? '/entries' : '/'} className={`text-gray-500 dark:text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium transition-all duration-500 ${currentUser ? 'block' : 'hidden'}`}>Entries</Link>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\r\n        <span onClick={() => setTheme(colorTheme) } className=\"mr-5 bg-yellow-300 hover:bg-yellow-400 dark:bg-gray-300 dark:hover:bg-gray-400 cursor-pointer rounded-md p-1 transition-all duration-500\">\r\n          { colorTheme === 'light' ?\r\n        \r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n            <path d=\"M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z\" />\r\n          </svg>:\r\n        \r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\r\n          </svg>\r\n        }\r\n        </span>\r\n        <Link to='/login' id=\"login\" className=\"bg-gray-500 dark:bg-gray-900 text-white px-3 hover:bg-gray-900 py-2 rounded-md text-sm font-medium mr-3 transition duration-500\" aria-current=\"page\">Sign In</Link>\r\n        {<Link to='/signup' id=\"signup\" className=\"hidden bg-yellow-600 text-white px-3 hover:bg-yellow-700 py-2 rounded-md text-sm font-medium\" aria-current=\"page\">Sign Up</Link>}\r\n        <Link to='/entries' id=\"newEntry\" className=\"bg-yellow-600 text-white px-3 hover:bg-yellow-700 flex py-2 rounded-md text-sm font-medium hidden mr-3 transition duration-500\" aria-current=\"page\">\r\n        { colorTheme === 'light' ?\r\n      \r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n          <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z\" clipRule=\"evenodd\" />\r\n        </svg> :\r\n\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n        </svg>\r\n      }\r\n        New Entry</Link>\r\n        <button onClick={() => {app.auth().signOut(); window.location.replace(\"/\")}} id=\"logout\" className=\"bg-gray-500 dark:bg-gray-900 text-white px-3 hover:bg-gray-900 py-2 rounded-md text-sm font-medium transition duration-500 hidden\" aria-current=\"page\">Logout</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div id=\"mobile-menu\" className={showing ? 'block' : 'hidden'}>\r\n    <div className=\"px-2 pt-2 pb-3 space-y-1\">\r\n\r\n      <Link to={currentUser ? '/dashboard' : '/'} href=\"#\" className=\"bg-gray-900 text-white block px-3 py-2 rounded-md text-base font-medium\" aria-current=\"page\">{currentUser ? \"Dashboard\" : \"Home\"}</Link>\r\n\r\n      <Link to={currentUser ? '/home' : '/'} className=\"text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium\">About</Link>\r\n\r\n      <Link to={currentUser ? '/entries' : '/'} className={`text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium ${currentUser ? 'block' : 'hidden'}`}>Entries</Link>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\nexport default Navbar;","import React, { useRef, useEffect, useState, useContext } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport './splash-screen.scss';\r\nimport {TweenMax, Power3} from 'gsap';\r\nimport { Link } from 'react-router-dom';\r\nimport Navbar from '../navbar/navbar';\r\nimport { AuthContext } from '../auth/auth';\r\n\r\nfunction SplashScreen() {\r\n\tconst { currentUser } = useContext(AuthContext);\r\n\r\n    let jumbotronItem = useRef(null);\r\n\r\n\t\tconst [colorTheme, setTheme] = useState(localStorage.theme);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetTheme(localStorage.theme)\r\n\t\t}, [colorTheme])\r\n\r\n    useEffect(() => {\r\n        TweenMax.to(\r\n            jumbotronItem,\r\n            1,\r\n            {\r\n                opacity: 1,\r\n                y: -50,\r\n                ease: Power3.easeOut\r\n            }\r\n        );\r\n    }, [])\r\n\r\n\tif (currentUser) {\r\n\t\treturn <Redirect to=\"/entries\" />\r\n\t}\r\n\r\n    return(\r\n\t\t\t<div id=\"background\" className=\"h-screen transition-all duration-500 splash-screen dark:splash-screen-dark\">\r\n\t\t\t<Navbar />\r\n\t\t\t\t<div \r\n\t\t\t\t\tclassName=\"jumbotron text-center py-48 lg:py-72 transition-all duration-500\">\r\n\t\t\t\t\t\t<div ref={el => {jumbotronItem = el}}>\r\n\t\t\t\t\t\t\t<h1 className=\"text-7xl text-black dark:text-yellow-400 font-bold transition-all duration-500\">Zzz Tracker</h1>\r\n\t\t\t\t\t\t\t<p className=\"text-4xl p-6 text-black dark:text-white font-bold transition-all duration-500\">Create an account and track your \r\n\t\t\t\t\t\t\tdaily sleep</p>\r\n\t\t\t\t\t\t\t<Link to='/signup' className=\"bg-gray-700 hover:bg-gray-800 dark:bg-yellow-400 text-white dark:hover:bg-yellow-500 dark:text-black font-bold py-2 px-5 rounded mb-32 transition-all duration-500\">Sign up now</Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t</div>\r\n    )\r\n}\r\n\r\nexport default SplashScreen;","import React, { useCallback } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport app from '../../firebase/base.js';\r\nimport useDarkMode from '../../services/useDarkMode.js';\r\nimport Navbar from '../navbar/navbar';\r\nimport './signup.scss';\r\n\r\nconst Signup = ({ history }) => {\r\n\r\n    useDarkMode();\r\n\r\n    const handleSignUp = useCallback(async event => {\r\n        event.preventDefault();\r\n        const { email, password } = event.target.elements;\r\n        try {\r\n            await app\r\n                .auth()\r\n                .createUserWithEmailAndPassword(email.value, password.value);\r\n            history.push(\"/dashboard\");\r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n    }, [history]);\r\n\r\n    return (\r\n        <div id=\"background\" className=\"h-screen bg-gray-100 dark:bg-gray-900 transition duration-500 splash-screen dark:splash-screen-dark\">\r\n          <Navbar />\r\n          <div className=\"mx-auto text-center align-middle w-min pt-32 flex\">\r\n            <div className=\"p-10 lg:p-24 bg-gray-200 dark:bg-gray-700 transition duration-500 w-m rounded\">\r\n              <h1 className=\"text-5xl text-black dark:text-yellow-500 font-bold mb-5 transition duration-500\"><span className=\"text-yellow-500 dark:text-white transition duration-500\">Zzz</span> Tracker</h1>\r\n              <form onSubmit={handleSignUp}>\r\n                <input className=\"input-email font-bold placeholder-yellow-500 bg-gray-600 text-black dark:text-white w-60 rounded my-5 text-center\" name=\"email\" type=\"email\" placeholder=\"Email\" />\r\n                <input className=\"input-password font-bold placeholder-yellow-500 text-black dark:text-white w-60 rounded text-center mb-10\" name=\"password\" type=\"password\" placeholder=\"Password\" />\r\n                <button className=\"font-bold bg-yellow-400 hover:bg-yellow-500 w-60 p-2 rounded transition-all duration-300\" type=\"submit\">Sign Up</button>\r\n                <p className=\"mt-5 px-5 font-bold text-black dark:text-white transition duration-500\">Already have an account? <Link to=\"/login\" className=\"text-yellow-500 cursor-pointer\">Log In</Link></p>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Signup);","import React, { useCallback, useContext } from 'react';\r\nimport { withRouter, Redirect, Link } from 'react-router-dom';\r\nimport app from '../../firebase/base';\r\nimport useDarkMode from '../../services/useDarkMode';\r\nimport { AuthContext } from '../auth/auth';\r\nimport Navbar from '../navbar/navbar';\r\nimport './login.scss';\r\n\r\nconst Login = ({ history }) => {\r\n    useDarkMode();\r\n\r\n    const handleLogin = useCallback(\r\n        async event => {\r\n            event.preventDefault();\r\n            const { email, password } = event.target.elements;\r\n            try { \r\n                await app\r\n                    .auth()\r\n                    .signInWithEmailAndPassword(email.value, password.value);\r\n                history.push('/dashboard');\r\n            } catch(error) {\r\n                alert(error);\r\n            }\r\n        }, [history]\r\n    );\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n    if (currentUser) {\r\n        return <Redirect to='/dashboard' />;\r\n    }\r\n\r\n    return (\r\n        <div id=\"background\" className=\"h-screen bg-gray-100 dark:bg-gray-900 transition duration-500 splash-screen dark:splash-screen-dark\">\r\n          <Navbar />\r\n          <div className=\"mx-auto text-center align-middle w-min pt-32 flex\">\r\n            <div className=\"p-10 lg:p-24 bg-gray-200 dark:bg-gray-700 transition duration-500 rounded\">\r\n              <h1 className=\"text-5xl text-black dark:text-yellow-500 font-bold mb-5 transition-all duration-500\"><span className=\"text-yellow-500 dark:text-white transition-all duration-500\">Zzz</span> Tracker</h1>\r\n              <form onSubmit={handleLogin}>\r\n                <input className=\"input-email font-bold placeholder-yellow-500 bg-gray-600 text-black dark:text-white w-60 rounded my-5 text-center\" name=\"email\" type=\"email\" placeholder=\"Email\" />\r\n                <input className=\"input-password font-bold placeholder-yellow-500 text-black dark:text-white w-60 rounded text-center mb-10\" name=\"password\" type=\"password\" placeholder=\"Password\" />\r\n                <button className=\"font-bold bg-yellow-400 hover:bg-yellow-500 w-60 p-2 rounded transition-all duration-300\" type=\"submit\">Log in</button>\r\n                <p className=\"mt-5 font-bold text-black dark:text-white transition duration-500\">Don't have an account? <Link to=\"/signup\" className=\"text-yellow-500 cursor-pointer\">Sign Up</Link></p>\r\n            </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Navbar from '../navbar/navbar';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport app from '../../firebase/base';\r\nimport './homepage.scss';\r\nimport useDarkMode from '../../services/useDarkMode';\r\nimport { v4 as uuidv4} from 'uuid';\r\nimport { AuthContext } from '../auth/auth';\r\nimport moment from 'moment';\r\n\r\nexport default function Homepage() {\r\n    const { currentUser } = useContext(AuthContext);\r\n    const currentUserId = currentUser ? currentUser.uid : null;\r\n    const [displayModal, setDisplayModal] = useState(false);\r\n    const [sleepDate, setSleepDate] = useState('');\r\n    const [asleepTime, setAsleepTime] = useState('');\r\n    const [wakeupTime, setWakeupTime] = useState('');\r\n\r\n    const [sleepArray, setSleepArray] = useState([]);\r\n\r\n    const ref = app.firestore().collection('sleepData');\r\n\r\n    function getSleepData() {\r\n        ref\r\n            .where('owner', '==', currentUserId)\r\n            .orderBy('sleepDate', 'desc')\r\n            .orderBy('asleepTime', 'desc')\r\n            .onSnapshot((querySnapshot) => {\r\n            const items = [];\r\n            querySnapshot.forEach((doc) => {\r\n                items.push(doc.data());\r\n            });\r\n            setSleepArray(items);\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        getSleepData();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    // Add sleep entry to DB\r\n    function addSleepEntry() {\r\n        const owner = currentUser ? currentUser.uid : 'unknown';\r\n        const ownerEmail = currentUser ? currentUser.email : 'unknown';\r\n        const newSleepEntry = {\r\n            sleepDate,\r\n            asleepTime,\r\n            wakeupTime,\r\n            id: uuidv4(),\r\n            owner,\r\n            ownerEmail,\r\n            createdAt: new Date().toLocaleDateString()\r\n            // lastUpdate: app.firestore.FieldValue.serverTimestamp(),\r\n        };\r\n\r\n        if ((sleepDate === '') || (asleepTime === '') || (wakeupTime === '')) {\r\n            alert('Please fill in the whole form');\r\n        } else {\r\n            ref\r\n            .doc(newSleepEntry.id)\r\n            .set(newSleepEntry)\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n        };\r\n    }\r\n\r\n    // Delete sleep entry from DB\r\n    function deleteSleepEntry(sleepEntry) {\r\n        ref\r\n            .doc(sleepEntry.id)\r\n            .delete()\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n    };\r\n\r\n    // Reset the sleep entry\r\n    function resetEntry() {\r\n        let date = document.getElementById('date');\r\n        let asleep = document.getElementById('asleep');\r\n        let wakeup = document.getElementById('wakeup');\r\n\r\n        date.value = new Date().toISOString().slice(0, 10);\r\n        asleep.value = '22:00';\r\n        wakeup.value = '06:00';\r\n\r\n        setSleepDate('');\r\n        setAsleepTime('');\r\n        setWakeupTime('');\r\n    }\r\n\r\n    // Get total sleep time\r\n    function getTimeDiff(asleepTime, wakeupTime, entry) {\r\n        // hours\r\n        let asleepHour = parseInt(new Date(\"01/01/2007 \" + asleepTime).getTime());\r\n        let wakeupHour = parseInt(new Date(\"01/01/2007 \" + wakeupTime).getTime());\r\n\r\n        // decimal value\r\n        let totalSleepDecimal = (wakeupHour - asleepHour) / 60000 / 60;\r\n\r\n        if (totalSleepDecimal < 0) {\r\n            totalSleepDecimal = 24 + totalSleepDecimal;\r\n        }\r\n\r\n        // decimal -> hh:mm format\r\n        let duration = moment.duration(totalSleepDecimal, 'hours');\r\n        let result = `${duration._data.hours < 10 ? '0' + duration._data.hours : duration._data.hours}:${duration._data.minutes < 10 ? '0' + duration._data.minutes : duration._data.minutes}`\r\n        \r\n        ref.doc(entry.id).update({\r\n            totalSlept: result\r\n        }).catch((err) => {console.error(err);})\r\n\r\n        return result;\r\n\r\n    }\r\n\r\n    useDarkMode();\r\n\r\n    return (\r\n        <div id=\"background\" className={`bg-gray-100 dark:bg-gray-900 pb-3 splash-screen dark:splash-screen-dark transition duration-500 ${displayModal && sleepArray.length > 2 ? 'h-full' : 'h-screen'}`}>\r\n            <Navbar />\r\n            <div className=\"flex justify-center\">\r\n                <button onClick={() => {setDisplayModal(!displayModal)}} \r\n                type=\"button\" \r\n                className=\"bg-yellow-500 hover:bg-yellow-600 px-10 py-6 font-bold text-black dark:text-gray-200 text-2xl my-10 rounded-full flex transition duration-500\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-8 w-8 mr-2 my-auto\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                </svg>New Entry</button>\r\n            </div>\r\n            <div className={displayModal ? 'block' : 'hidden'}>\r\n\r\n                {/* Date Selection */}\r\n                <div className=\"p-10 lg:p-24 bg-gray-200 dark:bg-gray-700 transition duration-500 rounded w-min mx-auto\">\r\n                    <div className=\"mx-auto text-center align-middle w-64\">\r\n                    <div>\r\n                        <label htmlFor=\"date\" className=\"font-bold text-black dark:text-white transition duration-500\"> Select the date\r\n                        <TextField\r\n                            id=\"date\"\r\n                            type=\"date\"\r\n                            className=\"w-60\"\r\n                            defaultValue={new Date().toISOString().slice(0, 10)}\r\n                            onChange={(event) => {setSleepDate(event.target.value)}}\r\n                            required\r\n                        />\r\n                        </label>\r\n                        <label htmlFor=\"asleepTime\" className=\"font-bold text-black dark:text-white transition duration-500\"> What time did you fall asleep?\r\n                        <TextField\r\n                            id=\"asleep\"\r\n                            type=\"time\"\r\n                            className=\"w-60\"\r\n                            defaultValue=\"22:00\"\r\n                            onChange={(event) => {setAsleepTime(event.target.value)}}\r\n                            required\r\n                        />\r\n                        </label>\r\n                        <label htmlFor=\"wakeupTime\" className=\"font-bold text-black dark:text-white transition duration-500\"> What time did you wake up?\r\n                        <TextField\r\n                            id=\"wakeup\"\r\n                            type=\"time\"\r\n                            className=\"w-60\"\r\n                            defaultValue=\"06:00\"\r\n                            onChange={(event) => {setWakeupTime(event.target.value)}}\r\n                            required\r\n                        />\r\n                        </label>\r\n                        <div className=\"flex\">\r\n                            <button\r\n                            onClick={() => resetEntry()}\r\n                            className=\"font-bold bg-gray-300 dark:bg-gray-900 m-auto px-5 hover:bg-gray-400 dark:hover:bg-gray-600 py-2 rounded transition-all duration-300\">Reset</button>\r\n                            <button\r\n                            onClick={() => addSleepEntry()}\r\n                            className=\"font-bold bg-yellow-400 m-auto px-4 hover:bg-yellow-500 py-2 rounded transition-all duration-300\">Submit</button>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"mx-10 text-center\">\r\n               <h1 className=\"text-3xl font-bold text-black dark:text-white my-5 transition duration-500\">{sleepArray.length !== 0 ? 'Your Sleep Entries' : \"You haven't added any entries yet, you can add one by clicking the button above\"}</h1>\r\n                {sleepArray.map((entry) => (\r\n                    <div className=\"flex text-xs md:text-lg text-black dark:text-white justify-center bg-gray-200 dark:bg-yellow-600 w-full lg:w-1/2 py-2 my-3 mx-auto transition duration-500 rounded md:rounded-full overflow-auto\" key={entry.id}>\r\n                        <h1 className=\"mx-2 lg:mx-5\"><span className=\"font-bold\">{entry.sleepDate}</span></h1>\r\n                        <h1 className=\"mx-2 lg:mx-5\">Asleep time: <span className=\"font-bold\">{entry.asleepTime}</span></h1>\r\n                        <h1 className=\"mx-2 lg:mx-5\">Wakeup time: <span className=\"font-bold\">{entry.wakeupTime}</span></h1>\r\n                        <h1 className=\"mx-2 lg:mx-5\"><span className=\"font-bold\">{getTimeDiff(entry.asleepTime, entry.wakeupTime, entry)} Hours Slept</span></h1>\r\n                        <span className=\"cursor-pointer my-auto hover:text-red-600 mr-2\" onClick={() => {deleteSleepEntry(entry)}}>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n                            </svg>\r\n                        </span>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState, useContext, useEffect} from 'react';\r\nimport Navbar from '../navbar/navbar';\r\nimport '../../../node_modules/react-vis/dist/style.css';\r\nimport {XYPlot, LineSeries, VerticalGridLines, HorizontalGridLines, XAxis, YAxis} from 'react-vis';\r\nimport app from '../../firebase/base.js';\r\nimport { AuthContext } from '../auth/auth.js';\r\nimport moment from 'moment';\r\n\r\n\r\nfunction Dashboard() {\r\n    const { currentUser } = useContext(AuthContext);\r\n    const currentUserId = currentUser ? currentUser.uid : null;\r\n\r\n    const [sleepArray, setSleepArray] = useState([]);\r\n\r\n    const [averageSleepTime, setAverageSleep] = useState(0);\r\n\r\n    const [less6Hours, setLess6Hours] = useState(0);\r\n    const [more8Hours, setMore8Hours] = useState(0);\r\n\r\n    const ref = app.firestore().collection('sleepData');\r\n\r\n    function getSleepData() {\r\n        ref\r\n            .where('owner', '==', currentUserId)\r\n            .orderBy('sleepDate', 'desc')\r\n            .orderBy('asleepTime', 'desc')\r\n            .onSnapshot((querySnapshot) => {\r\n            const items = [];\r\n            querySnapshot.forEach((doc) => {\r\n                items.push(doc.data());\r\n            });\r\n            setSleepArray(items);\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        getSleepData()\r\n        getSleepStats()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [getSleepStats]);\r\n\r\n    function getSleepStats() {\r\n        let averageSleep = 0;\r\n\r\n        let less6Hours = [];\r\n        let more8Hours = [];\r\n\r\n        for (let i = 0; i < sleepArray.length; i++) {\r\n            var hoursMinutesTotalSlept = sleepArray[i].totalSlept.split(/[.:]/);\r\n            var hours = parseInt(hoursMinutesTotalSlept[0], 10);\r\n            var minutes = hoursMinutesTotalSlept[1] ? parseInt(hoursMinutesTotalSlept[1], 10) : 0;\r\n            var decimalTime = hours + minutes / 60;\r\n\r\n            averageSleep += decimalTime;\r\n        }\r\n\r\n        setAverageSleep(Math.round(averageSleep / sleepArray.length * 10) / 10);\r\n\r\n        sleepArray.map((entry) => {\r\n            if (parseInt(entry.totalSlept) < 7) {\r\n                return less6Hours.push(parseInt(entry.totalSlept));\r\n            } else if (parseInt(entry.totalSlept) > 8) {\r\n                return more8Hours.push(parseInt(entry.totalSlept));\r\n            }\r\n        });\r\n\r\n        setLess6Hours(less6Hours.length);\r\n        setMore8Hours(more8Hours.length);\r\n    }\r\n\r\n    return (\r\n        <div className=\"h-screen splash-screen dark:splash-screen-dark transition duration-500\">\r\n            <Navbar />\r\n            <div className=\"text-center\">\r\n                <h1 className=\"font-bold text-3xl lg:text-5xl my-8 text-black dark:text-white transition-all duration-500\">Your Dashboard</h1>\r\n            </div>\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 mx-auto my-32\">\r\n                <div className='justify-center text-center bg-gray-400 dark:bg-gray-600 opacity-80 w-3/4 py-5 mx-auto rounded-md transition-all duration-500'>\r\n                    <h1 className=\"text-3xl font-bold mb-3\">Graph</h1>\r\n                    <XYPlot className=\"mx-auto\" height={400} width= {600} xType=\"ordinal\" yDomain={[1, 12]}>\r\n                        <XAxis />\r\n                        <YAxis />\r\n                        <VerticalGridLines />\r\n                        <HorizontalGridLines />\r\n                        <LineSeries data={sleepArray.map((entry) => {\r\n                            return {x: entry.sleepDate, y: parseInt(entry.totalSlept)}\r\n                        })} />\r\n\r\n                    </XYPlot>\r\n                </div>\r\n                <div className=\"text-center justify-center w-4/5 mx-auto\">\r\n                    <div className=\"bg-gray-400 opacity-80 rounded-lg py-5\" style={{height: 500}}>\r\n                        <h1 className=\"text-3xl font-bold mb-3\">Stats</h1>\r\n                        <h1 className=\"text-xl font-bold my-5\">Your average sleep time: {averageSleepTime} Hours</h1>\r\n                        <h1 className=\"text-xl font-bold my-5\">Number of days with less than 6 hours sleep: {less6Hours}</h1>\r\n                        <h1 className=\"text-xl font-bold my-5\">Number of days with more than 8 hours sleep: {more8Hours}</h1>\r\n                        <h1 className=\"text-3xl font-bold mt-24\">{averageSleepTime < 7 ? \"You should sleep more. Healthy adults need between 7 and 9 hours of sleep\" : averageSleepTime > 9 ? 'You sleep too much. Healthy adults need between 7 and 9 hours of sleep' : 'You are on track! Keep it up.'}</h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","import './App.css';\nimport SplashScreen from './components/splash-screen/splash-screen';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Signup from './components/signup-page/signup';\nimport { AuthProvider } from './components/auth/auth.js';\nimport Login from './components/login-page/login';\nimport Homepage from './components/homepage/homepage';\nimport Dashboard from './components/dashboard/dashboard';\n\nfunction App() {\n  if (localStorage.getItem('theme') === null) {\n    localStorage.setItem('theme', 'light');\n  }\n  \n  return (\n    <AuthProvider>\n      <Router basename=\"/zzz-tracker\">\n        <Switch>\n          <Route path=\"/\" exact>\n            {<SplashScreen />}\n          </Route>\n          <Route path=\"/signup\">\n            <Signup />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/entries\">\n            <Homepage />\n          </Route>\n          <Route path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n        </Switch>\n      </Router>\n    </AuthProvider>\n    \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}